// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OrganisationsColumns holds the columns for the "organisations" table.
	OrganisationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "orgid", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "user_organisations", Type: field.TypeInt, Nullable: true},
	}
	// OrganisationsTable holds the schema information for the "organisations" table.
	OrganisationsTable = &schema.Table{
		Name:       "organisations",
		Columns:    OrganisationsColumns,
		PrimaryKey: []*schema.Column{OrganisationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organisations_users_organisations",
				Columns:    []*schema.Column{OrganisationsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "userid", Type: field.TypeUUID, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OrganisationsTable,
		UsersTable,
	}
)

func init() {
	OrganisationsTable.ForeignKeys[0].RefTable = UsersTable
}
